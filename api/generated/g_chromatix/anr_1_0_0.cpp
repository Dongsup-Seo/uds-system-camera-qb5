////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// THIS IS AUTO-GENERATED CODE.  PLEASE DO NOT EDIT (File bug reports against tools).
///
/// Auto-generated by: Parameter Parser V2.0.0 (1907311625)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  anr_1_0_0.cpp
/// @brief Auto-generated Chromatix parameter file
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "anr_1_0_0.h"
#include "parametersetmanager.h"

ANR_1_0_0_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Default Constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatix_anr10TypeClass::chromatix_anr10TypeClass(
    const CHAR* name)
    : ParameterModule(name, VersionUnion(MAJOR, MINOR, PATCH), 0, ModeUnion(0))
{
    PARAMETER_INITIALIZE(SymbolTableID);
    PARAMETER_INITIALIZE(enable_section);
    PARAMETER_INITIALIZE(module_version);
    PARAMETER_INITIALIZE(parameter_version);
    PARAMETER_INITIALIZE(control_variables);
    PARAMETER_INITIALIZE(control_method);
    PARAMETER_INITIALIZE(chromatix_anr10_reserve);
    PARAMETER_INITIALIZE(chromatix_anr10_core);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatix_anr10TypeClass::chromatix_anr10TypeClass(
    const CHAR* name,
    UINT32      modeId,
    ModeUnion   mode)
    : ParameterModule(name, VersionUnion(MAJOR, MINOR, PATCH), modeId, mode)
{
    PARAMETER_INITIALIZE(SymbolTableID);
    PARAMETER_INITIALIZE(enable_section);
    PARAMETER_INITIALIZE(module_version);
    PARAMETER_INITIALIZE(parameter_version);
    PARAMETER_INITIALIZE(control_variables);
    PARAMETER_INITIALIZE(control_method);
    PARAMETER_INITIALIZE(chromatix_anr10_reserve);
    PARAMETER_INITIALIZE(chromatix_anr10_core);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Destructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatix_anr10TypeClass::~chromatix_anr10TypeClass()
{
    Unloadchromatix_anr10Type(this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GetName
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const CHAR* chromatix_anr10TypeClass::GetName(
    const CHAR* type)
{
    const CHAR* name = type;
    CHAR temp[ParameterFileSymbolTableEntry::TYPE_LEN + 1];
    if (PARAMETER_STRCMP(type, ParameterFileSymbolTableEntry::GetType(temp, "anr10_ipe")) == 0)
    {
        name = "anr10_ipe";
    }
    return name;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    structure->pass_trigger = (ispglobalelements::trigger_pass)entry->ReadEnum(&result, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct(entry, &structure->pass_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_topStruct(entry, &structure->top, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_power_controlStruct(entry, &structure->power_control, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_configStruct(entry, &structure->luma_filter_config, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_configStruct(entry, &structure->chroma_filter_config, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_kernelStruct(entry, &structure->luma_filter_kernel, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_peak_managementStruct(entry, &structure->luma_peak_management, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_peak_managementStruct(entry, &structure->chroma_peak_management, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_inter_length_output_indicationStruct(entry, &structure->inter_length_output_indication, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_grey_treatmentStruct(entry, &structure->grey_treatment, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_extensionStruct(entry, &structure->chroma_filter_extension, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_smoothing_treatmentStruct(entry, &structure->luma_smoothing_treatment, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_smoothing_treatmentStruct(entry, &structure->chroma_smoothing_treatment, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_lnrStruct(entry, &structure->lnr, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct(entry, &structure->cnr, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_detection_thresholdsStruct(entry, &structure->luma_filter_detection_thresholds, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_detection_thresholdsStruct(entry, &structure->chroma_filter_detection_thresholds, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend1Struct(entry, &structure->dcblend1, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend2Struct(entry, &structure->dcblend2, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_ditheringStruct(entry, &structure->dithering, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_topStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_topStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::topStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_luma_noise_reduction_pass, alignment);
    result = result && entry->Read(&structure->enable_chroma_noise_reduction_pass, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_power_controlStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_power_controlStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::power_controlStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_chroma_filter_extension, alignment);
    result = result && entry->Read(&structure->enable_luma_smoothing_treatment_and_peak_treatment, alignment);
    result = result && entry->Read(&structure->enable_chroma_smoothing_treatment_and_peak_treatment, alignment);
    result = result && entry->Read(&structure->enable_luma_chroma_filter_all_thresholds_per_uv, alignment);
    result = result && entry->Read(&structure->enable_luma_chroma_filter_uv_thresholds_per_yuv, alignment);
    result = result && entry->Read(&structure->enable_luma_filter_uv_thresholds, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_configStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_configStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::luma_filter_configStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->filter_decision_mode, alignment);
    result = result && entry->Read(&structure->filter_enable_external_derivatives, alignment);
    result = result && entry->Read(&structure->dcind_decision_mode, alignment);
    result = result && entry->Read(&structure->dcind_enable_external_derivatives, alignment);
    result = result && entry->Read(&structure->enable_use_second_derivative_for_luma_3x3, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_configStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_configStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::chroma_filter_configStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->filter_decision_mode, alignment);
    result = result && entry->Read(&structure->dcind_decision_mode, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_kernelStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_kernelStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::luma_filter_kernelStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->kernel_definition_mode, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_complement_mode, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_complement_mode, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_luma_peak_managementStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_peak_managementStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::luma_peak_managementStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_luma_peak_management, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_peak_managementStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_peak_managementStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::chroma_peak_managementStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_chroma_peak_management, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_inter_length_output_indicationStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_inter_length_output_indicationStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::inter_length_output_indicationStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->luma_neighbours_impact_enable, alignment);
    result = result && entry->Read(&structure->chroma_neighbours_impact_enable, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_grey_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_grey_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::grey_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_grey_treatment_thr_modification, alignment);
    result = result && entry->Read(&structure->enable_grey_treatment_isotropic_filter_blend, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_extensionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_extensionStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::chroma_filter_extensionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_chroma_filter_extension_median, alignment);
    result = result && entry->Read(&structure->enable_chroma_filter_extension_bilateral, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_luma_smoothing_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_smoothing_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::luma_smoothing_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_luma_edge_smoothing, alignment);
    result = result && entry->Read(&structure->enable_luma_transition_smoothing, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_smoothing_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_smoothing_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::chroma_smoothing_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_chroma_edge_smoothing, alignment);
    result = result && entry->Read(&structure->enable_chroma_transition_smoothing, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_lnrStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_lnrStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::lnrStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_lnr, alignment);
    result = result && entry->Read(&structure->use_luts_from_full_pass_configuration, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::cnrStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_cnr, alignment);
    result = result && entry->Read(&structure->input_select, alignment);
    result = result && entry->Read(&structure->number_of_colors, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_detect_chromaticity_calc_mode_tabStruct(entry, &structure->detect_chromaticity_calc_mode_tab, alignment);
    result = result && entry->Read(&structure->detect_color0_saturation_mode, alignment);
    result = result && entry->Read(&structure->detect_color0_external_enable, alignment);
    result = result && Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_face_detection_dependency_tabStruct(entry, &structure->face_detection_dependency_tab, alignment);
    result = result && entry->Read(&structure->face_detection_boundary, alignment);
    result = result && entry->Read(&structure->face_detection_transition, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_detect_chromaticity_calc_mode_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_detect_chromaticity_calc_mode_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::cnrStruct::detect_chromaticity_calc_mode_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_chromaticity_calc_mode, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_face_detection_dependency_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_cnrStruct_face_detection_dependency_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::cnrStruct::face_detection_dependency_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->face_detection_dependency, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_detection_thresholdsStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_luma_filter_detection_thresholdsStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::luma_filter_detection_thresholdsStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->control_per_uv_limit, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_detection_thresholdsStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_chroma_filter_detection_thresholdsStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::chroma_filter_detection_thresholdsStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->control_per_uv_limit, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend1Struct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend1Struct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::dcblend1Struct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_dcblend1_chroma, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend2Struct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_dcblend2Struct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::dcblend2Struct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_dcblend2_luma, alignment);
    result = result && entry->Read(&structure->enable_dcblend2_chroma, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_reserve_dataType_pass_dataStruct_ditheringStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_reserve_dataType_pass_dataStruct_ditheringStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_reserve_dataType::pass_dataStruct::ditheringStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->dithering_y_en, alignment);
    result = result && entry->Read(&structure->dithering_c_en, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load chromatix_anr10_reserveType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadchromatix_anr10_reserveType(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10_reserveType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    for (UINT32 i = 0; result && i < 4; i++)
    {
        result = Loadmod_anr10_pass_reserve_dataType(entry, &structure->mod_anr10_pass_reserve_data[i], alignment);
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadanr10_rgn_dataType_luma_chroma_filter_configStruct(entry, &structure->luma_chroma_filter_config, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_configStruct(entry, &structure->luma_filter_config, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_configStruct(entry, &structure->chroma_filter_config, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_kernelStruct(entry, &structure->luma_filter_kernel, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_kernelStruct(entry, &structure->chroma_filter_kernel, alignment);
    result = result && Loadanr10_rgn_dataType_luma_peak_managementStruct(entry, &structure->luma_peak_management, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_peak_managementStruct(entry, &structure->chroma_peak_management, alignment);
    result = result && Loadanr10_rgn_dataType_inter_length_thr_modificationStruct(entry, &structure->inter_length_thr_modification, alignment);
    result = result && Loadanr10_rgn_dataType_inter_length_output_indicationStruct(entry, &structure->inter_length_output_indication, alignment);
    result = result && Loadanr10_rgn_dataType_grey_treatmentStruct(entry, &structure->grey_treatment, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_extensionStruct(entry, &structure->chroma_filter_extension, alignment);
    result = result && Loadanr10_rgn_dataType_luma_smoothing_treatmentStruct(entry, &structure->luma_smoothing_treatment, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_smoothing_treatmentStruct(entry, &structure->chroma_smoothing_treatment, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct(entry, &structure->lnr, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct(entry, &structure->cnr, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct(entry, &structure->luma_filter_detection_thresholds, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct(entry, &structure->chroma_filter_detection_thresholds, alignment);
    result = result && Loadanr10_rgn_dataType_dcblend2Struct(entry, &structure->dcblend2, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_chroma_filter_configStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_chroma_filter_configStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_chroma_filter_configStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->threshold_lut_control_avg_block_size, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_configStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_configStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_configStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->filter_isotropic_min_filter_size, alignment);
    result = result && entry->Read(&structure->filter_manual_derivatives_flags, alignment);
    result = result && entry->Read(&structure->dcind_isotropic_min_size, alignment);
    result = result && entry->Read(&structure->dcind_manual_derivatives_flags, alignment);
    result = result && entry->Read(&structure->second_derivative_max_influence_radius_filtering, alignment);
    result = result && entry->Read(&structure->second_derivative_max_influence_radius_dc_indication, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_configStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_configStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_configStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->filter_isotropic_min_filter_size, alignment);
    result = result && entry->Read(&structure->filter_manual_derivatives_flags, alignment);
    result = result && entry->Read(&structure->dcind_isotropic_min_size, alignment);
    result = result && entry->Read(&structure->dcind_manual_derivatives_flags, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_kernelStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_kernelStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_kernelStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->edge_kernel_size, alignment);
    result = result && entry->Read(&structure->automatic_definition_granularity, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_1x1_center_coefficient, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_3x3_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_3x3_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_5x5_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_5x5_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_5x5_complement_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_7x7_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_7x7_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_7x7_complement_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_9x9_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_9x9_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_edge_kernel_9x9_complement_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_blend_weight, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_size, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_1x1_center_coefficient, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_3x3_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_3x3_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_5x5_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_5x5_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_5x5_complement_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_7x7_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_7x7_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_7x7_complement_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_9x9_horver_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_9x9_diag_shift, alignment);
    result = result && entry->Read(&structure->manual_flat_kernel_9x9_complement_shift, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_kernelStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_kernelStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_kernelStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->kernel_size, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_peak_managementStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_peak_managementStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_peak_managementStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->detect_hard_decision_environment_activity, alignment);
    result = result && entry->Read(&structure->detect_hard_decision_distance_from_average, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_lower_limit, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_offset, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_slope, alignment);
    result = result && entry->Read(&structure->detect_extreme_decision_distance_from_maxmin, alignment);
    result = result && entry->Read(&structure->detect_dcsize_decision_sensitivity, alignment);
    result = result && entry->Read(&structure->correction_mode, alignment);
    result = result && entry->Read(&structure->correction_area_smart_min_inner_distance, alignment);
    result = result && entry->Read(&structure->correction_isotropic_activity_threshold, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_peak_managementStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_peak_managementStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_peak_managementStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->detect_hard_decision_environment_activity, alignment);
    result = result && entry->Read(&structure->detect_hard_decision_distance_from_average, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_lower_limit, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_offset, alignment);
    result = result && entry->Read(&structure->detect_soft_decision_distance_from_average_slope, alignment);
    result = result && entry->Read(&structure->detect_extreme_decision_distance_from_maxmin, alignment);
    result = result && entry->Read(&structure->detect_dcsize_decision_sensitivity, alignment);
    result = result && entry->Read(&structure->correction_mode, alignment);
    result = result && entry->Read(&structure->correction_area_smart_min_inner_distance, alignment);
    result = result && entry->Read(&structure->correction_isotropic_activity_threshold, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_inter_length_thr_modificationStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_inter_length_thr_modificationStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::inter_length_thr_modificationStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->luma_input_indication_thr_modification_scale, alignment);
    result = result && entry->Read(&structure->chroma_input_indication_thr_modification_scale, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_inter_length_output_indicationStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_inter_length_output_indicationStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::inter_length_output_indicationStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->luma_center_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->luma_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->luma_neighbours_parallel_dist, alignment);
    result = result && entry->Read(&structure->luma_neighbours_perpendicular_dist, alignment);
    result = result && entry->Read(&structure->luma_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->chroma_center_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->chroma_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->chroma_neighbours_perpendicular_dist, alignment);
    result = result && entry->Read(&structure->chroma_neighbours_agreement_sensitivity, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_grey_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_grey_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::grey_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_grey_treatment_dcblend2_chroma_modification, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_chromaticity_radius, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_chromaticity_thr_low, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_chromaticity_thr_high, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_y_max_derivative_radius, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_y_max_derivative_thr_low, alignment);
    result = result && entry->Read(&structure->detect_grey_condition_y_max_derivative_thr_high, alignment);
    result = result && entry->Read(&structure->detect_greydcsize_neighbors_chromaticity_thr, alignment);
    result = result && entry->Read(&structure->detect_greydcsize_center_detail_chromaticity_thr, alignment);
    result = result && entry->Read(&structure->thr_modification_target_y, alignment);
    result = result && entry->Read(&structure->thr_modification_target_u, alignment);
    result = result && entry->Read(&structure->thr_modification_target_v, alignment);
    result = result && entry->Read(&structure->isotropic_filter_blend_factor_scale, alignment);
    result = result && entry->Read(&structure->isotropic_filter_blend_factor_offset, alignment);
    result = result && entry->Read(&structure->isotropic_filter_size, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_extensionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_extensionStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_extensionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->median_detect_override_detail_condition_chromaticity_thr, alignment);
    result = result && entry->Read(&structure->median_detect_override_detail_condition_y_max_derivative_thr, alignment);
    result = result && entry->Read(&structure->median_detect_corner_detail_sensitivity_y, alignment);
    result = result && entry->Read(&structure->median_detect_corner_detail_sensitivity_uv, alignment);
    result = result && entry->Read(&structure->median_detect_triple_chromaticities_detail_thr_up_down, alignment);
    result = result && entry->Read(&structure->median_detect_triple_chromaticities_detail_thr_external, alignment);
    result = result && entry->Read(&structure->median_detect_isotropic_self_decision_enforce_detail, alignment);
    result = result && entry->Read(&structure->median_detect_isotropic_neighbors_detail_sensitivity, alignment);
    result = result && entry->Read(&structure->median_detect_isotropic_neighbors_detail_sensitivity_far_scale, alignment);
    result = result && entry->Read(&structure->median_detect_directional_self_decision_enforce_detail, alignment);
    result = result && entry->Read(&structure->median_detect_directional_neighbors_detail_sensitivity, alignment);
    result = result && entry->Read(&structure->median_detect_directional_neighbors_detail_sensitivity_far_scale, alignment);
    result = result && entry->Read(&structure->bilateral_decision_minimalsize, alignment);
    result = result && entry->Read(&structure->bilateral_filtersize, alignment);
    result = result && entry->Read(&structure->chroma_flat_indication_extension_threshold_9x9, alignment);
    result = result && entry->Read(&structure->chroma_flat_indication_extension_threshold_11x11, alignment);
    result = result && entry->Read(&structure->chroma_grey_indication_extension_threshold_9x9, alignment);
    result = result && entry->Read(&structure->chroma_grey_indication_extension_threshold_11x11, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_smoothing_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_smoothing_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_smoothing_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->edge_smoothing_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->edge_smoothing_binarization_maxedgeval, alignment);
    result = result && entry->Read(&structure->edge_smoothing_agreement_number, alignment);
    result = result && entry->Read(&structure->transition_smoothing_filter_size, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_minedgeval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_maxedgeval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_agreement_flat_vs_voters, alignment);
    result = result && entry->Read(&structure->flat_isotropic_3x3_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->flat_isotropic_3x3_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->flat_isotropic_5x5_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->smoothing_kernel_3x3_shift, alignment);
    result = result && entry->Read(&structure->smoothing_kernel_5x5_horver_shift, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_smoothing_treatmentStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_smoothing_treatmentStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_smoothing_treatmentStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->edge_smoothing_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->edge_smoothing_binarization_maxedgeval, alignment);
    result = result && entry->Read(&structure->edge_smoothing_agreement_number, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_minedgeval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_binarization_maxedgeval, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->transition_isotropic_neighbours_agreement_flat_vs_voters, alignment);
    result = result && entry->Read(&structure->flat_isotropic_3x3_neighbours_binarization_minflatval, alignment);
    result = result && entry->Read(&structure->flat_isotropic_3x3_neighbours_agreement_sensitivity, alignment);
    result = result && entry->Read(&structure->smoothing_kernel_1x1_shift, alignment);
    result = result && entry->Read(&structure->smoothing_kernel_3x3_shift, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->elliptic_xc, alignment);
    result = result && entry->Read(&structure->elliptic_yc, alignment);
    result = result && entry->Read(&structure->elliptic_a, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_y_tabStruct(entry, &structure->luma_filter_lut_thr_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_uv_tabStruct(entry, &structure->luma_filter_lut_thr_uv_tab, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_y_tabStruct(entry, &structure->chroma_filter_lut_thr_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_uv_tabStruct(entry, &structure->chroma_filter_lut_thr_uv_tab, alignment);
    result = result && Loadanr10_rgn_dataType_lnrStruct_strength_modifier_radius_blend_lut_tabStruct(entry, &structure->strength_modifier_radius_blend_lut_tab, alignment);
    result = result && entry->Read(&structure->luma_lnr_dcblend2_target_factor, alignment);
    result = result && entry->Read(&structure->luma_lnr_flat_kernel_weight_target_factor, alignment);
    result = result && entry->Read(&structure->chroma_lnr_cnr_dcblend2_target_factor, alignment);
    result = result && entry->Read(&structure->automatic_influence_luma_luts, alignment);
    result = result && entry->Read(&structure->automatic_influence_chroma_luts, alignment);
    result = result && entry->Read(&structure->automatic_influence_modifier_radius_blend_lut, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct::luma_filter_lut_thr_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_lut_thr_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct_luma_filter_lut_thr_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct::luma_filter_lut_thr_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_lut_thr_uv, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct::chroma_filter_lut_thr_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_lut_thr_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct_chroma_filter_lut_thr_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct::chroma_filter_lut_thr_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_lut_thr_uv, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_lnrStruct_strength_modifier_radius_blend_lut_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_lnrStruct_strength_modifier_radius_blend_lut_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::lnrStruct::strength_modifier_radius_blend_lut_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->strength_modifier_radius_blend_lut, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadanr10_rgn_dataType_cnrStruct_detect_angle_start_tabStruct(entry, &structure->detect_angle_start_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_detect_angle_end_tabStruct(entry, &structure->detect_angle_end_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_detect_chromaticity_start_tabStruct(entry, &structure->detect_chromaticity_start_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_detect_chromaticity_end_tabStruct(entry, &structure->detect_chromaticity_end_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_detect_luma_start_tabStruct(entry, &structure->detect_luma_start_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_detect_luma_end_tabStruct(entry, &structure->detect_luma_end_tab, alignment);
    result = result && entry->Read(&structure->detect_color0_skin_saturation_min_y_min, alignment);
    result = result && entry->Read(&structure->detect_color0_skin_saturation_max_y_min, alignment);
    result = result && entry->Read(&structure->detect_color0_skin_saturation_min_y_max, alignment);
    result = result && entry->Read(&structure->detect_color0_skin_saturation_max_y_max, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_boundary_weight_tabStruct(entry, &structure->boundary_weight_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_transition_ratio_tabStruct(entry, &structure->transition_ratio_tab, alignment);
    result = result && entry->Read(&structure->color0_transition_ratio_external, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_y_tabStruct(entry, &structure->luma_filter_threshold_scale_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_uv_tabStruct(entry, &structure->luma_filter_threshold_scale_uv_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_y_tabStruct(entry, &structure->luma_filter_offset_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_u_tabStruct(entry, &structure->luma_filter_offset_u_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_v_tabStruct(entry, &structure->luma_filter_offset_v_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_y_tabStruct(entry, &structure->chroma_filter_threshold_scale_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_uv_tabStruct(entry, &structure->chroma_filter_threshold_scale_uv_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_y_tabStruct(entry, &structure->chroma_filter_offset_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_u_tabStruct(entry, &structure->chroma_filter_offset_u_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_v_tabStruct(entry, &structure->chroma_filter_offset_v_tab, alignment);
    result = result && entry->Read(&structure->luma_filter_base_far_modifier_y, alignment);
    result = result && entry->Read(&structure->luma_filter_base_far_modifier_uv, alignment);
    result = result && entry->Read(&structure->chroma_filter_base_far_modifier_y, alignment);
    result = result && entry->Read(&structure->chroma_filter_base_far_modifier_uv, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_dcblend2_weight_scale_tabStruct(entry, &structure->luma_dcblend2_weight_scale_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_chroma_dcblend2_weight_restricted_scale_tabStruct(entry, &structure->chroma_dcblend2_weight_restricted_scale_tab, alignment);
    result = result && Loadanr10_rgn_dataType_cnrStruct_luma_flat_kernel_blend_weight_scale_tabStruct(entry, &structure->luma_flat_kernel_blend_weight_scale_tab, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_angle_start_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_angle_start_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_angle_start_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_angle_start, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_angle_end_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_angle_end_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_angle_end_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_angle_end, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_chromaticity_start_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_chromaticity_start_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_chromaticity_start_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_chromaticity_start, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_chromaticity_end_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_chromaticity_end_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_chromaticity_end_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_chromaticity_end, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_luma_start_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_luma_start_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_luma_start_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_luma_start, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_detect_luma_end_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_detect_luma_end_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::detect_luma_end_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->detect_luma_end, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_boundary_weight_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_boundary_weight_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::boundary_weight_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->boundary_weight, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_transition_ratio_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_transition_ratio_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::transition_ratio_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->transition_ratio, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_filter_threshold_scale_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_threshold_scale_y, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_filter_threshold_scale_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_filter_threshold_scale_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_threshold_scale_uv, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_filter_offset_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_filter_offset_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_offset_y, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_filter_offset_u_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_u_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_filter_offset_u_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_offset_u, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_filter_offset_v_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_filter_offset_v_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_filter_offset_v_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_filter_offset_v, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_filter_threshold_scale_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_threshold_scale_y, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_filter_threshold_scale_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_filter_threshold_scale_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_threshold_scale_uv, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_filter_offset_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_filter_offset_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_offset_y, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_filter_offset_u_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_u_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_filter_offset_u_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_offset_u, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_filter_offset_v_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_filter_offset_v_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_filter_offset_v_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_filter_offset_v, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_dcblend2_weight_scale_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_dcblend2_weight_scale_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_dcblend2_weight_scale_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_dcblend2_weight_scale, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_chroma_dcblend2_weight_restricted_scale_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_chroma_dcblend2_weight_restricted_scale_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::chroma_dcblend2_weight_restricted_scale_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->chroma_dcblend2_weight_restricted_scale, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_cnrStruct_luma_flat_kernel_blend_weight_scale_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_cnrStruct_luma_flat_kernel_blend_weight_scale_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::cnrStruct::luma_flat_kernel_blend_weight_scale_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->luma_flat_kernel_blend_weight_scale, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct(entry, &structure->y_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct(entry, &structure->y_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->y_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->y_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->y_threshold_close3_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_close3_mod_offset, alignment);
    result = result && entry->Read(&structure->y_threshold_der2_close3_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_der2_close3_mod_offset, alignment);
    result = result && entry->Read(&structure->y_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_far_mod_offset, alignment);
    result = result && entry->Read(&structure->y_threshold_close_external_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_close_external_mod_offset, alignment);
    result = result && entry->Read(&structure->y_threshold_far_external_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_far_external_mod_offset, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct(entry, &structure->u_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct(entry, &structure->u_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->u_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->u_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->u_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->u_threshold_far_mod_offset, alignment);
    result = result && entry->Read(&structure->u_threshold_far_external_mod_scale, alignment);
    result = result && entry->Read(&structure->u_threshold_far_external_mod_offset, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct(entry, &structure->v_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct(entry, &structure->v_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->v_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->v_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->v_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->v_threshold_far_mod_offset, alignment);
    result = result && entry->Read(&structure->v_threshold_far_external_mod_scale, alignment);
    result = result && entry->Read(&structure->v_threshold_far_external_mod_offset, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::y_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->y_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::y_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->y_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::u_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->u_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::u_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->u_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::v_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->v_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_luma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::luma_filter_detection_thresholdsStruct::v_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->v_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct(entry, &structure->y_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct(entry, &structure->y_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->y_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->y_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->y_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->y_threshold_far_mod_offset, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct(entry, &structure->u_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct(entry, &structure->u_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->u_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->u_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->u_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->u_threshold_far_mod_offset, alignment);
    result = result && entry->Read(&structure->u_threshold_distant_mod_scale, alignment);
    result = result && entry->Read(&structure->u_threshold_distant_mod_offset, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct(entry, &structure->v_threshold_per_y_tab, alignment);
    result = result && Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct(entry, &structure->v_threshold_per_uv_tab, alignment);
    result = result && entry->Read(&structure->v_threshold_top_limit, alignment);
    result = result && entry->Read(&structure->v_threshold_bottom_limit, alignment);
    result = result && entry->Read(&structure->v_threshold_far_mod_scale, alignment);
    result = result && entry->Read(&structure->v_threshold_far_mod_offset, alignment);
    result = result && entry->Read(&structure->v_threshold_distant_mod_scale, alignment);
    result = result && entry->Read(&structure->v_threshold_distant_mod_offset, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::y_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->y_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_y_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::y_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->y_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::u_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->u_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_u_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::u_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->u_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_y_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::v_threshold_per_y_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->v_threshold_per_y, 17, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_chroma_filter_detection_thresholdsStruct_v_threshold_per_uv_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::chroma_filter_detection_thresholdsStruct::v_threshold_per_uv_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->v_threshold_per_uv, 8, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_dcblend2Struct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_dcblend2Struct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::dcblend2Struct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadanr10_rgn_dataType_dcblend2Struct_dcblend2_luma_strength_function_tabStruct(entry, &structure->dcblend2_luma_strength_function_tab, alignment);
    result = result && Loadanr10_rgn_dataType_dcblend2Struct_dcblend2_chroma_strength_function_tabStruct(entry, &structure->dcblend2_chroma_strength_function_tab, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_dcblend2Struct_dcblend2_luma_strength_function_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_dcblend2Struct_dcblend2_luma_strength_function_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::dcblend2Struct::dcblend2_luma_strength_function_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->dcblend2_luma_strength_function, 5, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load anr10_rgn_dataType_dcblend2Struct_dcblend2_chroma_strength_function_tabStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadanr10_rgn_dataType_dcblend2Struct_dcblend2_chroma_strength_function_tabStruct(
    ParameterFileSymbolTableEntry* entry,
    anr10_rgn_dataType::dcblend2Struct::dcblend2_chroma_strength_function_tabStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->ReadArray(structure->dcblend2_chroma_strength_function, 6, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pass_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pass_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pass_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    structure->pass_trigger = (ispglobalelements::trigger_pass)entry->ReadEnum(&result, alignment);
    result = result && Loadanr10_rgn_dataType(entry, &structure->anr10_rgn_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_cct_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_cct_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_cct_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->cct_trigger, alignment);
    result = result && Loadmod_anr10_cct_dataType_cct_dataStruct(entry, &structure->cct_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_cct_dataType_cct_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_cct_dataType_cct_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_cct_dataType::cct_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    for (UINT32 i = 0; result && i < 4; i++)
    {
        result = Loadmod_anr10_pass_dataType(entry, &structure->mod_anr10_pass_data[i], alignment);
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_aec_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_aec_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = globalelements::globalelementsClass::Loadtrigger_pt_type_aec(entry, &structure->aec_trigger, alignment);
    result = result && Loadmod_anr10_aec_dataType_aec_dataStruct(entry, &structure->aec_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_aec_dataType_aec_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_aec_dataType_aec_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_aec_dataType::aec_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_cct_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_cct_dataCount, alignment);
        structure->mod_anr10_cct_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_cct_data = PARAMETER_NEW mod_anr10_cct_dataType[structure->mod_anr10_cct_dataCount];
        }
        if (!result || structure->mod_anr10_cct_data == NULL)
        {
            structure->mod_anr10_cct_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_cct_dataCount; i++)
        {
            result = Loadmod_anr10_cct_dataType(pointerEntry, &structure->mod_anr10_cct_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_hdr_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_hdr_aec_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_hdr_aec_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type_aec_hdr(entry, &structure->hdr_aec_trigger, alignment);
    result = result && Loadmod_anr10_hdr_aec_dataType_hdr_aec_dataStruct(entry, &structure->hdr_aec_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_hdr_aec_dataType_hdr_aec_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_hdr_aec_dataType_hdr_aec_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_hdr_aec_dataType::hdr_aec_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_aec_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_aec_dataCount, alignment);
        structure->mod_anr10_aec_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_aec_data = PARAMETER_NEW mod_anr10_aec_dataType[structure->mod_anr10_aec_dataCount];
        }
        if (!result || structure->mod_anr10_aec_data == NULL)
        {
            structure->mod_anr10_aec_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_aec_dataCount; i++)
        {
            result = Loadmod_anr10_aec_dataType(pointerEntry, &structure->mod_anr10_aec_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_drc_gain_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_drc_gain_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_drc_gain_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->drc_gain_trigger, alignment);
    result = result && Loadmod_anr10_drc_gain_dataType_drc_gain_dataStruct(entry, &structure->drc_gain_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_drc_gain_dataType_drc_gain_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_drc_gain_dataType_drc_gain_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_drc_gain_dataType::drc_gain_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_hdr_aec_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_hdr_aec_dataCount, alignment);
        structure->mod_anr10_hdr_aec_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_hdr_aec_data = PARAMETER_NEW mod_anr10_hdr_aec_dataType[structure->mod_anr10_hdr_aec_dataCount];
        }
        if (!result || structure->mod_anr10_hdr_aec_data == NULL)
        {
            structure->mod_anr10_hdr_aec_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_hdr_aec_dataCount; i++)
        {
            result = Loadmod_anr10_hdr_aec_dataType(pointerEntry, &structure->mod_anr10_hdr_aec_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pre_scale_ratio_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pre_scale_ratio_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pre_scale_ratio_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->pre_scale_ratio_trigger, alignment);
    result = result && Loadmod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct(entry, &structure->pre_scale_ratio_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_pre_scale_ratio_dataType::pre_scale_ratio_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_drc_gain_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_drc_gain_dataCount, alignment);
        structure->mod_anr10_drc_gain_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_drc_gain_data = PARAMETER_NEW mod_anr10_drc_gain_dataType[structure->mod_anr10_drc_gain_dataCount];
        }
        if (!result || structure->mod_anr10_drc_gain_data == NULL)
        {
            structure->mod_anr10_drc_gain_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_drc_gain_dataCount; i++)
        {
            result = Loadmod_anr10_drc_gain_dataType(pointerEntry, &structure->mod_anr10_drc_gain_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_post_scale_ratio_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_post_scale_ratio_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_post_scale_ratio_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->post_scale_ratio_trigger, alignment);
    result = result && Loadmod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct(entry, &structure->post_scale_ratio_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_post_scale_ratio_dataType::post_scale_ratio_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_pre_scale_ratio_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_pre_scale_ratio_dataCount, alignment);
        structure->mod_anr10_pre_scale_ratio_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_pre_scale_ratio_data = PARAMETER_NEW mod_anr10_pre_scale_ratio_dataType[structure->mod_anr10_pre_scale_ratio_dataCount];
        }
        if (!result || structure->mod_anr10_pre_scale_ratio_data == NULL)
        {
            structure->mod_anr10_pre_scale_ratio_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_pre_scale_ratio_dataCount; i++)
        {
            result = Loadmod_anr10_pre_scale_ratio_dataType(pointerEntry, &structure->mod_anr10_pre_scale_ratio_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_lens_zoom_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_lens_zoom_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_lens_zoom_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->lens_zoom_trigger, alignment);
    result = result && Loadmod_anr10_lens_zoom_dataType_lens_zoom_dataStruct(entry, &structure->lens_zoom_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_lens_zoom_dataType_lens_zoom_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_lens_zoom_dataType_lens_zoom_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_lens_zoom_dataType::lens_zoom_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_post_scale_ratio_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_post_scale_ratio_dataCount, alignment);
        structure->mod_anr10_post_scale_ratio_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_post_scale_ratio_data = PARAMETER_NEW mod_anr10_post_scale_ratio_dataType[structure->mod_anr10_post_scale_ratio_dataCount];
        }
        if (!result || structure->mod_anr10_post_scale_ratio_data == NULL)
        {
            structure->mod_anr10_post_scale_ratio_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_post_scale_ratio_dataCount; i++)
        {
            result = Loadmod_anr10_post_scale_ratio_dataType(pointerEntry, &structure->mod_anr10_post_scale_ratio_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_lens_posn_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_lens_posn_dataType(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_lens_posn_dataType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = ispglobalelements::ispglobalelementsClass::Loadtrigger_pt_type(entry, &structure->lens_posn_trigger, alignment);
    result = result && Loadmod_anr10_lens_posn_dataType_lens_posn_dataStruct(entry, &structure->lens_posn_data, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load mod_anr10_lens_posn_dataType_lens_posn_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmod_anr10_lens_posn_dataType_lens_posn_dataStruct(
    ParameterFileSymbolTableEntry* entry,
    mod_anr10_lens_posn_dataType::lens_posn_dataStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_lens_zoom_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_lens_zoom_dataCount, alignment);
        structure->mod_anr10_lens_zoom_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_lens_zoom_data = PARAMETER_NEW mod_anr10_lens_zoom_dataType[structure->mod_anr10_lens_zoom_dataCount];
        }
        if (!result || structure->mod_anr10_lens_zoom_data == NULL)
        {
            structure->mod_anr10_lens_zoom_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_lens_zoom_dataCount; i++)
        {
            result = Loadmod_anr10_lens_zoom_dataType(pointerEntry, &structure->mod_anr10_lens_zoom_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load chromatix_anr10_coreType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadchromatix_anr10_coreType(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10_coreType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading Array mod_anr10_lens_posn_data from symbol table
    {
        result = entry->Read(&structure->mod_anr10_lens_posn_dataCount, alignment);
        structure->mod_anr10_lens_posn_dataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->mod_anr10_lens_posn_data = PARAMETER_NEW mod_anr10_lens_posn_dataType[structure->mod_anr10_lens_posn_dataCount];
        }
        if (!result || structure->mod_anr10_lens_posn_data == NULL)
        {
            structure->mod_anr10_lens_posn_dataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->mod_anr10_lens_posn_dataCount; i++)
        {
            result = Loadmod_anr10_lens_posn_dataType(pointerEntry, &structure->mod_anr10_lens_posn_data[i], alignment);
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load chromatix_anr10Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadchromatix_anr10Type(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadenable_sectionStruct(entry, &structure->enable_section, alignment);
    result = result && Loadmodule_versionStruct(entry, &structure->module_version, alignment);
    result = result && Loadparameter_versionStruct(entry, &structure->parameter_version, alignment);
    result = result && Loadcontrol_variablesStruct(entry, &structure->control_variables, alignment);
    result = result && Loadcontrol_methodStruct(entry, &structure->control_method, alignment);
    result = result && Loadchromatix_anr10_reserveType(entry, &structure->chromatix_anr10_reserve, alignment);
    result = result && Loadchromatix_anr10_coreType(entry, &structure->chromatix_anr10_core, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load enable_sectionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadenable_sectionStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type::enable_sectionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->enable_luma_noise_reduction, alignment);
    result = result && entry->Read(&structure->enable_chroma_noise_reduction, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load module_versionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadmodule_versionStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type::module_versionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->major_revision, alignment);
    result = result && entry->Read(&structure->minor_revision, alignment);
    result = result && entry->Read(&structure->incr_revision, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load parameter_versionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadparameter_versionStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type::parameter_versionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading String revision from symbol table
    {
        UINT32 count = 0;
        result = entry->Read(&count, alignment);
        ParameterFileSymbolTableEntry* stringPointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && stringPointerEntry != NULL;
        structure->revision = NULL;
        result = result && stringPointerEntry->ReadString(&structure->revision, count, alignment);
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load control_variablesStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadcontrol_variablesStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type::control_variablesStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    for (UINT32 i = 0; result && i < 9; i++)
    {
        structure->control_var_type[i] = (chromatix_anr10Type::control_variablesStruct::control_var_typeEnum)entry->ReadEnum(&result, alignment);
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load control_methodStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatix_anr10TypeClass::Loadcontrol_methodStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatix_anr10Type::control_methodStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    structure->aec_exp_control = (ispglobalelements::tuning_control_aec_type)entry->ReadEnum(&result, alignment);
    structure->aec_hdr_control = (ispglobalelements::tuning_control_aec_hdr_type)entry->ReadEnum(&result, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_aec_dataType(
    mod_anr10_aec_dataType* structure)
{
    Unloadmod_anr10_aec_dataType_aec_dataStruct(&structure->aec_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_aec_dataType_aec_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_aec_dataType_aec_dataStruct(
    mod_anr10_aec_dataType::aec_dataStruct* structure)
{
    PARAMETER_DELETE[] structure->mod_anr10_cct_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_hdr_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_hdr_aec_dataType(
    mod_anr10_hdr_aec_dataType* structure)
{
    Unloadmod_anr10_hdr_aec_dataType_hdr_aec_dataStruct(&structure->hdr_aec_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_hdr_aec_dataType_hdr_aec_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_hdr_aec_dataType_hdr_aec_dataStruct(
    mod_anr10_hdr_aec_dataType::hdr_aec_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_aec_dataCount; i++)
    {
        Unloadmod_anr10_aec_dataType(&structure->mod_anr10_aec_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_aec_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_drc_gain_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_drc_gain_dataType(
    mod_anr10_drc_gain_dataType* structure)
{
    Unloadmod_anr10_drc_gain_dataType_drc_gain_dataStruct(&structure->drc_gain_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_drc_gain_dataType_drc_gain_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_drc_gain_dataType_drc_gain_dataStruct(
    mod_anr10_drc_gain_dataType::drc_gain_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_hdr_aec_dataCount; i++)
    {
        Unloadmod_anr10_hdr_aec_dataType(&structure->mod_anr10_hdr_aec_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_hdr_aec_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_pre_scale_ratio_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_pre_scale_ratio_dataType(
    mod_anr10_pre_scale_ratio_dataType* structure)
{
    Unloadmod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct(&structure->pre_scale_ratio_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_pre_scale_ratio_dataType_pre_scale_ratio_dataStruct(
    mod_anr10_pre_scale_ratio_dataType::pre_scale_ratio_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_drc_gain_dataCount; i++)
    {
        Unloadmod_anr10_drc_gain_dataType(&structure->mod_anr10_drc_gain_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_drc_gain_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_post_scale_ratio_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_post_scale_ratio_dataType(
    mod_anr10_post_scale_ratio_dataType* structure)
{
    Unloadmod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct(&structure->post_scale_ratio_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_post_scale_ratio_dataType_post_scale_ratio_dataStruct(
    mod_anr10_post_scale_ratio_dataType::post_scale_ratio_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_pre_scale_ratio_dataCount; i++)
    {
        Unloadmod_anr10_pre_scale_ratio_dataType(&structure->mod_anr10_pre_scale_ratio_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_pre_scale_ratio_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_lens_zoom_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_lens_zoom_dataType(
    mod_anr10_lens_zoom_dataType* structure)
{
    Unloadmod_anr10_lens_zoom_dataType_lens_zoom_dataStruct(&structure->lens_zoom_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_lens_zoom_dataType_lens_zoom_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_lens_zoom_dataType_lens_zoom_dataStruct(
    mod_anr10_lens_zoom_dataType::lens_zoom_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_post_scale_ratio_dataCount; i++)
    {
        Unloadmod_anr10_post_scale_ratio_dataType(&structure->mod_anr10_post_scale_ratio_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_post_scale_ratio_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_lens_posn_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_lens_posn_dataType(
    mod_anr10_lens_posn_dataType* structure)
{
    Unloadmod_anr10_lens_posn_dataType_lens_posn_dataStruct(&structure->lens_posn_data);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload mod_anr10_lens_posn_dataType_lens_posn_dataStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadmod_anr10_lens_posn_dataType_lens_posn_dataStruct(
    mod_anr10_lens_posn_dataType::lens_posn_dataStruct* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_lens_zoom_dataCount; i++)
    {
        Unloadmod_anr10_lens_zoom_dataType(&structure->mod_anr10_lens_zoom_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_lens_zoom_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload chromatix_anr10_coreType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadchromatix_anr10_coreType(
    chromatix_anr10_coreType* structure)
{
    for (UINT32 i = 0; i < structure->mod_anr10_lens_posn_dataCount; i++)
    {
        Unloadmod_anr10_lens_posn_dataType(&structure->mod_anr10_lens_posn_data[i]);
    }
    PARAMETER_DELETE[] structure->mod_anr10_lens_posn_data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload chromatix_anr10Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadchromatix_anr10Type(
    chromatix_anr10Type* structure)
{
    Unloadparameter_versionStruct(&structure->parameter_version);
    Unloadchromatix_anr10_coreType(&structure->chromatix_anr10_core);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload parameter_versionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatix_anr10TypeClass::Unloadparameter_versionStruct(
    chromatix_anr10Type::parameter_versionStruct* structure)
{
    PARAMETER_DELETE[] structure->revision;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Parse symbol table entry, and return a new object
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ParameterModule* chromatix_anr10TypeClass::Parse(
    ParameterFileSymbolTableEntry* entry,
    UINT64 alignment) const
{
    chromatix_anr10TypeClass* cls = NULL;

    if (PARAMETER_STRCMP(Type, entry->Type) == 0 && Version.Value == entry->Version.Value)
    {
        cls = PARAMETER_NEW chromatix_anr10TypeClass(GetName(entry->Type), 
            entry->ModeId, entry->Mode);
        if (cls != NULL)
        {
            BOOL result = TRUE;

            cls->SymbolTableID = entry->ID;
            cls->ID            = entry->ID;

            result = result && Loadchromatix_anr10Type(entry, cls, alignment);

            if (!result)
            {
                PARAMETER_DELETE cls;
                cls = NULL;
            }
        }
    }
    return (ParameterModule*)cls;
}


ANR_1_0_0_NAMESPACE_END
