////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// THIS IS AUTO-GENERATED CODE.  PLEASE DO NOT EDIT (File bug reports against tools).
///
/// Auto-generated by: Parameter Parser V2.0.0 (1907311625)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  modsaspatialgenv1.cpp
/// @brief Auto-generated Chromatix parameter file
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "modsaspatialgenv1.h"
#include "parametersetmanager.h"

MODSASPATIALGENV1_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Default Constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatixSASpatialGenV1ArrayTypeClass::chromatixSASpatialGenV1ArrayTypeClass(
    const CHAR* name)
    : ParameterModule(name, VersionUnion(MAJOR, MINOR, PATCH), 0, ModeUnion(0))
{
    PARAMETER_INITIALIZE(SymbolTableID);
    PARAMETER_INITIALIZE(module_version);
    PARAMETER_INITIALIZE(SASpatialROIBasedAWBData);
    PARAMETER_INITIALIZE(SASpatialGenV1DataCount);
    PARAMETER_INITIALIZE(SASpatialGenV1DataID);
    PARAMETER_INITIALIZE(SASpatialGenV1Data);
    PARAMETER_INITIALIZE(enableFlag);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatixSASpatialGenV1ArrayTypeClass::chromatixSASpatialGenV1ArrayTypeClass(
    const CHAR* name,
    UINT32      modeId,
    ModeUnion   mode)
    : ParameterModule(name, VersionUnion(MAJOR, MINOR, PATCH), modeId, mode)
{
    PARAMETER_INITIALIZE(SymbolTableID);
    PARAMETER_INITIALIZE(module_version);
    PARAMETER_INITIALIZE(SASpatialROIBasedAWBData);
    PARAMETER_INITIALIZE(SASpatialGenV1Data);
    PARAMETER_INITIALIZE(enableFlag);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Destructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
chromatixSASpatialGenV1ArrayTypeClass::~chromatixSASpatialGenV1ArrayTypeClass()
{
    UnloadchromatixSASpatialGenV1ArrayType(this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GetName
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const CHAR* chromatixSASpatialGenV1ArrayTypeClass::GetName(
    const CHAR* type)
{
    const CHAR* name = type;
    CHAR temp[ParameterFileSymbolTableEntry::TYPE_LEN + 1];
    if (PARAMETER_STRCMP(type, ParameterFileSymbolTableEntry::GetType(temp, "SASpatialGenV1DataArray")) == 0)
    {
        name = "SASpatialGenV1DataArray";
    }
    return name;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load DistanceWeightsLevel1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::LoadDistanceWeightsLevel1Type(
    ParameterFileSymbolTableEntry* entry,
    DistanceWeightsLevel1Type* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading String Description from symbol table
    {
        UINT32 count = 0;
        result = entry->Read(&count, alignment);
        ParameterFileSymbolTableEntry* stringPointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && stringPointerEntry != NULL;
        structure->Description = NULL;
        result = result && stringPointerEntry->ReadString(&structure->Description, count, alignment);
    }
    result = result && entry->Read(&structure->enableFlag, alignment);
    result = result && awbglobalelements::awbglobalelementsClass::LoadawbWeightLUTLevel1Type(entry, &structure->weights, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load IntensityWeightsLevel1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::LoadIntensityWeightsLevel1Type(
    ParameterFileSymbolTableEntry* entry,
    IntensityWeightsLevel1Type* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading String Description from symbol table
    {
        UINT32 count = 0;
        result = entry->Read(&count, alignment);
        ParameterFileSymbolTableEntry* stringPointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && stringPointerEntry != NULL;
        structure->Description = NULL;
        result = result && stringPointerEntry->ReadString(&structure->Description, count, alignment);
    }
    result = result && entry->Read(&structure->enableFlag, alignment);
    structure->IntensityWeightComputationSelect = (awbglobalelements::awbSAIntensityWeightCmptType)entry->ReadEnum(&result, alignment);
    result = result && awbglobalelements::awbglobalelementsClass::LoadawbWeightLUTLevel1Type(entry, &structure->weights, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load ROIInfoType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::LoadROIInfoType(
    ParameterFileSymbolTableEntry* entry,
    ROIInfoType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading String Description from symbol table
    {
        UINT32 count = 0;
        result = entry->Read(&count, alignment);
        ParameterFileSymbolTableEntry* stringPointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && stringPointerEntry != NULL;
        structure->Description = NULL;
        result = result && stringPointerEntry->ReadString(&structure->Description, count, alignment);
    }
    result = result && awbglobalelements::awbglobalelementsClass::LoadawbRGBDataType(entry, &structure->TargetColor, alignment);
    result = result && awbglobalelements::awbglobalelementsClass::LoadROIPostionType(entry, &structure->ROIPosition, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load chromatixSASpatialGenV1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::LoadchromatixSASpatialGenV1Type(
    ParameterFileSymbolTableEntry* entry,
    chromatixSASpatialGenV1Type* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;


    // Reading String Description from symbol table
    {
        UINT32 count = 0;
        result = entry->Read(&count, alignment);
        ParameterFileSymbolTableEntry* stringPointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && stringPointerEntry != NULL;
        structure->Description = NULL;
        result = result && stringPointerEntry->ReadString(&structure->Description, count, alignment);
    }
    result = result && awbglobalelements::awbglobalelementsClass::LoadmoduleIDType(entry, &structure->moduleID, alignment);
    result = result && entry->Read(&structure->enableFlag, alignment);
    result = result && entry->Read(&structure->weight, alignment);

    // Reading Array DefaultROIInfo from symbol table
    {
        result = result && entry->Read(&structure->DefaultROIInfoCount, alignment);
        structure->DefaultROIInfoID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->DefaultROIInfo = PARAMETER_NEW ROIInfoType[structure->DefaultROIInfoCount];
        }
        if (!result || structure->DefaultROIInfo == NULL)
        {
            structure->DefaultROIInfoCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->DefaultROIInfoCount; i++)
        {
            result = LoadROIInfoType(pointerEntry, &structure->DefaultROIInfo[i], alignment);
        }
    }
    result = result && LoadIntensityWeightsLevel1Type(entry, &structure->IntensityWeights, alignment);
    result = result && LoadDistanceWeightsLevel1Type(entry, &structure->DistanceWeights, alignment);
    result = result && awbglobalelements::awbglobalelementsClass::LoadawbSAConfidenceDataType(entry, &structure->confidenceLevel, alignment);
    result = result && awbglobalelements::awbglobalelementsClass::LoadawbSAConfidenceDataType(entry, &structure->ROIAgregationWeights, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load chromatixSASpatialGenV1ArrayType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::LoadchromatixSASpatialGenV1ArrayType(
    ParameterFileSymbolTableEntry* entry,
    chromatixSASpatialGenV1ArrayType* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = Loadmodule_versionStruct(entry, &structure->module_version, alignment);
    result = result && LoadchromatixSASpatialGenV1Type(entry, &structure->SASpatialROIBasedAWBData, alignment);

    // Reading Array SASpatialGenV1Data from symbol table
    {
        result = result && entry->Read(&structure->SASpatialGenV1DataCount, alignment);
        structure->SASpatialGenV1DataID = entry->ID;
        ParameterFileSymbolTableEntry* pointerEntry = entry->Table->ReadPointerEntry(entry, alignment);
        result = result && pointerEntry != NULL;
        if (result)
        {
            structure->SASpatialGenV1Data = PARAMETER_NEW chromatixSASpatialGenV1Type[structure->SASpatialGenV1DataCount];
        }
        if (!result || structure->SASpatialGenV1Data == NULL)
        {
            structure->SASpatialGenV1DataCount = 0;
        }
        for (UINT32 i = 0; result && i < structure->SASpatialGenV1DataCount; i++)
        {
            result = LoadchromatixSASpatialGenV1Type(pointerEntry, &structure->SASpatialGenV1Data[i], alignment);
        }
    }
    result = result && entry->Read(&structure->enableFlag, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Load module_versionStruct
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL chromatixSASpatialGenV1ArrayTypeClass::Loadmodule_versionStruct(
    ParameterFileSymbolTableEntry* entry,
    chromatixSASpatialGenV1ArrayType::module_versionStruct* structure,
    UINT64 alignment)
{
    BOOL result = TRUE;

    result = entry->Read(&structure->major_revision, alignment);
    result = result && entry->Read(&structure->minor_revision, alignment);
    result = result && entry->Read(&structure->incr_revision, alignment);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload DistanceWeightsLevel1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatixSASpatialGenV1ArrayTypeClass::UnloadDistanceWeightsLevel1Type(
    DistanceWeightsLevel1Type* structure)
{
    PARAMETER_DELETE[] structure->Description;
    awbglobalelements::awbglobalelementsClass::UnloadawbWeightLUTLevel1Type(&structure->weights);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload IntensityWeightsLevel1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatixSASpatialGenV1ArrayTypeClass::UnloadIntensityWeightsLevel1Type(
    IntensityWeightsLevel1Type* structure)
{
    PARAMETER_DELETE[] structure->Description;
    awbglobalelements::awbglobalelementsClass::UnloadawbWeightLUTLevel1Type(&structure->weights);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload ROIInfoType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatixSASpatialGenV1ArrayTypeClass::UnloadROIInfoType(
    ROIInfoType* structure)
{
    PARAMETER_DELETE[] structure->Description;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload chromatixSASpatialGenV1Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatixSASpatialGenV1ArrayTypeClass::UnloadchromatixSASpatialGenV1Type(
    chromatixSASpatialGenV1Type* structure)
{
    PARAMETER_DELETE[] structure->Description;
    for (UINT32 i = 0; i < structure->DefaultROIInfoCount; i++)
    {
        UnloadROIInfoType(&structure->DefaultROIInfo[i]);
    }
    PARAMETER_DELETE[] structure->DefaultROIInfo;
    UnloadIntensityWeightsLevel1Type(&structure->IntensityWeights);
    UnloadDistanceWeightsLevel1Type(&structure->DistanceWeights);
    awbglobalelements::awbglobalelementsClass::UnloadawbSAConfidenceDataType(&structure->confidenceLevel);
    awbglobalelements::awbglobalelementsClass::UnloadawbSAConfidenceDataType(&structure->ROIAgregationWeights);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Unload chromatixSASpatialGenV1ArrayType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void chromatixSASpatialGenV1ArrayTypeClass::UnloadchromatixSASpatialGenV1ArrayType(
    chromatixSASpatialGenV1ArrayType* structure)
{
    UnloadchromatixSASpatialGenV1Type(&structure->SASpatialROIBasedAWBData);
    for (UINT32 i = 0; i < structure->SASpatialGenV1DataCount; i++)
    {
        UnloadchromatixSASpatialGenV1Type(&structure->SASpatialGenV1Data[i]);
    }
    PARAMETER_DELETE[] structure->SASpatialGenV1Data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Parse symbol table entry, and return a new object
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ParameterModule* chromatixSASpatialGenV1ArrayTypeClass::Parse(
    ParameterFileSymbolTableEntry* entry,
    UINT64 alignment) const
{
    chromatixSASpatialGenV1ArrayTypeClass* cls = NULL;

    if (PARAMETER_STRCMP(Type, entry->Type) == 0 && Version.Value == entry->Version.Value)
    {
        cls = PARAMETER_NEW chromatixSASpatialGenV1ArrayTypeClass(GetName(entry->Type), 
            entry->ModeId, entry->Mode);
        if (cls != NULL)
        {
            BOOL result = TRUE;

            cls->SymbolTableID = entry->ID;
            cls->ID            = entry->ID;

            result = result && LoadchromatixSASpatialGenV1ArrayType(entry, cls, alignment);

            if (!result)
            {
                PARAMETER_DELETE cls;
                cls = NULL;
            }
        }
    }
    return (ParameterModule*)cls;
}


MODSASPATIALGENV1_NAMESPACE_END
