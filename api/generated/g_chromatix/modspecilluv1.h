////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// THIS IS AUTO-GENERATED CODE.  PLEASE DO NOT EDIT (File bug reports against tools).
///
/// Auto-generated by: Parameter Parser V2.0.0 (1907311625)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  modspecilluv1.h
/// @brief Auto-generated Chromatix parameter file
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef MODSPECILLUV1_H
#define MODSPECILLUV1_H

#include "parametermodule.h"
#include "parameterfilesymboltable.h"
#include "parametertypes.h"
#include "globalelements.h"
#include "awbglobalelements.h"

#define MODSPECILLUV1_NAMESPACE_BEGIN namespace modspecilluv1 {
#define MODSPECILLUV1_NAMESPACE_END }

MODSPECILLUV1_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// specilluCameraType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
enum class specilluCameraType
{
    FRONT_CAMERA = 0,
    REAR_CAMERA  = 1
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// modspecillubasicv1TriggerDataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct modspecillubasicv1TriggerDataType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// triggerPt
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    awbglobalelements::triggerPointType         triggerPt;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// triggerData - Array
    /// Min Length:    1
    /// Max Length:    Unbounded
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32                   triggerDataCount;
    UINT32                   triggerDataID;
    awbglobalelements::awbTriggerDataFloatType* triggerData;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// chromatixspecilluv1type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct chromatixspecilluv1type
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Binary file symbol table entry ID
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32 SymbolTableID;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// moduleID
    ///
    /// Tuning Level:  never_tune
    /// Description:   Define module ID, sub module ID
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    awbglobalelements::moduleIDType                      moduleID;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// module_version
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct module_versionStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;
        INT32 major_revision;
        INT32 minor_revision;
        INT32 incr_revision;
    } module_version;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// enableFlag
    ///
    /// Tuning Level:  must_tune
    /// Description:   module enable flag
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    awbglobalelements::enableFlagType                    enableFlag;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// cameraType
    ///
    /// Description:   Specify applicable camera (0: front camera, 1:rear camera)
    /// Default Value: FRONT_CAMERA
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    specilluCameraType                cameraType;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// illuSpecRefpoint
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    awbglobalelements::awbPointDataType                  illuSpecRefpoint;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// convergence_speed
    ///
    /// Tuning Level:  must_tune
    /// Description:   Convergence Speed for LCD flash
    /// Default Value: 0.8
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    FLOAT                             convergence_speed;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// illuSpecWV
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    modspecillubasicv1TriggerDataType illuSpecWV;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// illuSpecWVInterp
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    modspecillubasicv1TriggerDataType illuSpecWVInterp;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// chromatixspecilluv1typeClass
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class chromatixspecilluv1typeClass : public ParameterModule, public chromatixspecilluv1type
{
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Version
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static const UINT16 MAJOR = 1;
    static const UINT16 MINOR = 0;
    static const UINT32 PATCH = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Default Constructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    chromatixspecilluv1typeClass(
        const CHAR* name);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Constructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    chromatixspecilluv1typeClass(
        const CHAR* name,
        UINT32      modeId,
        ModeUnion   mode);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Destructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~chromatixspecilluv1typeClass();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// GetName
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static const CHAR* GetName(
        const CHAR* type);


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load modspecillubasicv1TriggerDataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmodspecillubasicv1TriggerDataType(
        ParameterFileSymbolTableEntry* entry,
        modspecillubasicv1TriggerDataType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load chromatixspecilluv1type
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadchromatixspecilluv1type(
        ParameterFileSymbolTableEntry* entry,
        chromatixspecilluv1type* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load module_versionStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmodule_versionStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatixspecilluv1type::module_versionStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload modspecillubasicv1TriggerDataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadmodspecillubasicv1TriggerDataType(
        modspecillubasicv1TriggerDataType* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload chromatixspecilluv1type
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadchromatixspecilluv1type(
        chromatixspecilluv1type* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Parse symbol table entry, and return a new object
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ParameterModule* Parse(
        ParameterFileSymbolTableEntry* entry,
        UINT64 alignment) const;

}; // End class chromatixspecilluv1typeClass

MODSPECILLUV1_NAMESPACE_END
#endif // MODSPECILLUV1_H

