////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// THIS IS AUTO-GENERATED CODE.  PLEASE DO NOT EDIT (File bug reports against tools).
///
/// Auto-generated by: Parameter Parser V2.0.0 (1907311625)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  shdr_1_0_0.h
/// @brief Auto-generated Chromatix parameter file
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SHDR_1_0_0_H
#define SHDR_1_0_0_H

#include "parametermodule.h"
#include "parameterfilesymboltable.h"
#include "parametertypes.h"
#include "ispglobalelements.h"

#define SHDR_1_0_0_NAMESPACE_BEGIN namespace shdr_1_0_0 {
#define SHDR_1_0_0_NAMESPACE_END }

SHDR_1_0_0_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// shdr10_rgn_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct shdr10_rgn_dataType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// anchor_frame
    ///
    /// Tuning Level:  often_tune
    /// Description:   Anchor frame for the motion regions
    /// Type:          uint
    /// Default Value: 0
    /// Range:         [0,255]
    /// Bit Depth:     8uQ0
    /// Conversion:    no conversion needed
    /// Notes:         motion regions will be picked from short by default. Under low light conditions the motion regions needs
    ///                to be picked from the long
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32                 anchor_frame;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// hl_blending_weight
    ///
    /// Tuning Level:  often_tune
    /// Description:   Controls the amount of blending from high light regions in motion areas. May cause artifacts if anchor
    ///                frame is set to high
    /// Type:          uint
    /// Default Value: 128
    /// Range:         [0,128]
    /// Bit Depth:     8uQ0
    /// Conversion:    no conversion needed
    /// Notes:         none
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32                 hl_blending_weight;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// gtm_companding_tbl_tab
    ///
    /// Tuning Level:  often_tune
    /// Description:   Companding table to be used for snapshot mode if exposure ratio is > 64x
    /// Type:          float
    /// Default Value: 1.0875 0.5495 0.5232 0.5164 0.5128 0.5107 0.5073 0.5059 0.5052 0.5047 0.5043 0.5040 0.5038 0.5037 0.5028 0.4992 0.4954 0.4926 0.4907 0.4897 0.4889 0.4879 0.4871 0.4865 0.4860 0.4856 0.4851 0.4845 0.4839 0.4830 0.4819 0.4806 0.4791 0.4775 0.4758 0.4741 0.4720 0.4698 0.4675 0.4651 0.4626 0.4593 0.4555 0.4515 0.4471 0.4423 0.4366 0.4310 0.4258 0.4209 0.4162 0.4113 0.4067 0.4023 0.3981 0.3941 0.3900 0.3861 0.3826 0.3792 0.3761 0.3729 0.3700 0.3673 0.3649 0.3632 0.3625 0.3611 0.3590 0.3569 0.3547 0.3523 0.3499 0.3474 0.3452 0.3429 0.3405 0.3381 0.3357 0.3334 0.3310 0.3287 0.3264 0.3241 0.3220 0.3199 0.3177 0.3157 0.3136 0.3117 0.3097 0.3078 0.3059 0.3041 0.3023 0.3006 0.2988 0.2970 0.2953 0.2937 0.2920 0.2903 0.2887 0.2871 0.2856 0.2841 0.2825 0.2810 0.2796 0.2781 0.2767 0.2753 0.2739 0.2725 0.2711 0.2698 0.2685 0.2672 0.2659 0.2647 0.2634 0.2622 0.2610 0.2598 0.2586 0.2574 0.2563 0.2551 0.2540 0.2529 0.2518 0.2515 0.2511 0.2507 0.2504 0.2500
    /// Range:         [0.25,4]
    /// Bit Depth:     32uQ8
    /// Length:        136
    /// Conversion:    no conversion needed
    /// Notes:         none
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct gtm_companding_tbl_tabStruct
    {

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// gtm_companding_tbl - Array
        ///
        /// Tuning Level:  often_tune
        /// Default Value: 1.0875 0.5495 0.5232 0.5164 0.5128 0.5107 0.5073 0.5059 0.5052 0.5047 0.5043 0.5040 0.5038 0.5037 0.5028 0.4992 0.4954 0.4926 0.4907 0.4897 0.4889 0.4879 0.4871 0.4865 0.4860 0.4856 0.4851 0.4845 0.4839 0.4830 0.4819 0.4806 0.4791 0.4775 0.4758 0.4741 0.4720 0.4698 0.4675 0.4651 0.4626 0.4593 0.4555 0.4515 0.4471 0.4423 0.4366 0.4310 0.4258 0.4209 0.4162 0.4113 0.4067 0.4023 0.3981 0.3941 0.3900 0.3861 0.3826 0.3792 0.3761 0.3729 0.3700 0.3673 0.3649 0.3632 0.3625 0.3611 0.3590 0.3569 0.3547 0.3523 0.3499 0.3474 0.3452 0.3429 0.3405 0.3381 0.3357 0.3334 0.3310 0.3287 0.3264 0.3241 0.3220 0.3199 0.3177 0.3157 0.3136 0.3117 0.3097 0.3078 0.3059 0.3041 0.3023 0.3006 0.2988 0.2970 0.2953 0.2937 0.2920 0.2903 0.2887 0.2871 0.2856 0.2841 0.2825 0.2810 0.2796 0.2781 0.2767 0.2753 0.2739 0.2725 0.2711 0.2698 0.2685 0.2672 0.2659 0.2647 0.2634 0.2622 0.2610 0.2598 0.2586 0.2574 0.2563 0.2551 0.2540 0.2529 0.2518 0.2515 0.2511 0.2507 0.2504 0.2500
        /// Length:        136
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        FLOAT gtm_companding_tbl[136];
    } gtm_companding_tbl_tab;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// scale_mask_tab
    ///
    /// Tuning Level:  often_tune
    /// Description:   scale mask use to generate the saturated area pixels
    /// Type:          uint
    /// Default Value
    /// Range:         [0,255]
    /// Bit Depth:     8uQ0
    /// Length:        257
    /// Conversion:    no conversion needed
    /// Notes:         none
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct scale_mask_tabStruct
    {

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// scale_mask - Array
        ///
        /// Tuning Level:  often_tune
        /// Default Value
        /// Length:        257
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 scale_mask[257];
    } scale_mask_tab;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// mod_shdr10_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct mod_shdr10_aec_dataType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// aec_trigger
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    globalelements::trigger_pt_type_aec aec_trigger;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// shdr10_rgn_data
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    shdr10_rgn_dataType shdr10_rgn_data;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// mod_shdr10_hdr_aec_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct mod_shdr10_hdr_aec_dataType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// hdr_aec_trigger
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ispglobalelements::trigger_pt_type_aec_hdr hdr_aec_trigger;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// hdr_aec_data
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct hdr_aec_dataStruct
    {

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// mod_shdr10_aec_data - Array
        /// Min Length:    1
        /// Max Length:    Unbounded
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32                   mod_shdr10_aec_dataCount;
        UINT32                   mod_shdr10_aec_dataID;
        mod_shdr10_aec_dataType* mod_shdr10_aec_data;
    } hdr_aec_data;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// mod_shdr10_drc_gain_dataType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct mod_shdr10_drc_gain_dataType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// drc_gain_trigger
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ispglobalelements::trigger_pt_type drc_gain_trigger;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// drc_gain_data
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct drc_gain_dataStruct
    {

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// mod_shdr10_hdr_aec_data - Array
        /// Min Length:    1
        /// Max Length:    Unbounded
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32                       mod_shdr10_hdr_aec_dataCount;
        UINT32                       mod_shdr10_hdr_aec_dataID;
        mod_shdr10_hdr_aec_dataType* mod_shdr10_hdr_aec_data;
    } drc_gain_data;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// chromatix_shdr10_coreType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct chromatix_shdr10_coreType
{

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// mod_shdr10_drc_gain_data - Array
    /// Min Length:    1
    /// Max Length:    Unbounded
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32                        mod_shdr10_drc_gain_dataCount;
    UINT32                        mod_shdr10_drc_gain_dataID;
    mod_shdr10_drc_gain_dataType* mod_shdr10_drc_gain_data;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// chromatix_shdr10Type
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct chromatix_shdr10Type
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Binary file symbol table entry ID
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UINT32 SymbolTableID;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// enable_section
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct enable_sectionStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;
        globalelements::enable_flag_type shdr_enable;
    } enable_section;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// module_version
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct module_versionStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;
        INT32 major_revision;
        INT32 minor_revision;
        INT32 incr_revision;
    } module_version;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// parameter_version
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct parameter_versionStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;
        CHAR* revision;
    } parameter_version;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// control_variables
    ///
    /// Default Value: control_drc_gain, control_exp_time_ratio, control_lux_idx
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct control_variablesStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// control_var_type - Array
        /// Default Value: control_drc_gain, control_exp_time_ratio, control_lux_idx
        /// Length:        3
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        enum class control_var_typeEnum
        {
            control_lux_idx                   = 0,
            control_gain                      = 1,
            control_drc_gain                  = 2,
            control_exp_time_ratio            = 3,
            control_aec_exp_sensitivity_ratio = 4,
            control_exp_gain_ratio            = 5
        } control_var_type[3];
    } control_variables;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// control_method
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    struct control_methodStruct
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Binary file symbol table entry ID
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        UINT32 SymbolTableID;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// aec_exp_control
        /// Default Value: control_lux_idx
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ispglobalelements::tuning_control_aec_type     aec_exp_control;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// aec_hdr_control
        /// Default Value: control_exp_time_ratio
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ispglobalelements::tuning_control_aec_hdr_type aec_hdr_control;
    } control_method;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// chromatix_shdr10_core
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    chromatix_shdr10_coreType chromatix_shdr10_core;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// chromatix_shdr10TypeClass
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class chromatix_shdr10TypeClass : public ParameterModule, public chromatix_shdr10Type
{
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Version
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static const UINT16 MAJOR = 1;
    static const UINT16 MINOR = 0;
    static const UINT32 PATCH = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Default Constructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    chromatix_shdr10TypeClass(
        const CHAR* name);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Constructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    chromatix_shdr10TypeClass(
        const CHAR* name,
        UINT32      modeId,
        ModeUnion   mode);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Destructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~chromatix_shdr10TypeClass();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// GetName
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static const CHAR* GetName(
        const CHAR* type);


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load shdr10_rgn_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadshdr10_rgn_dataType(
        ParameterFileSymbolTableEntry* entry,
        shdr10_rgn_dataType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load shdr10_rgn_dataType_gtm_companding_tbl_tabStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadshdr10_rgn_dataType_gtm_companding_tbl_tabStruct(
        ParameterFileSymbolTableEntry* entry,
        shdr10_rgn_dataType::gtm_companding_tbl_tabStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load shdr10_rgn_dataType_scale_mask_tabStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadshdr10_rgn_dataType_scale_mask_tabStruct(
        ParameterFileSymbolTableEntry* entry,
        shdr10_rgn_dataType::scale_mask_tabStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load mod_shdr10_aec_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmod_shdr10_aec_dataType(
        ParameterFileSymbolTableEntry* entry,
        mod_shdr10_aec_dataType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load mod_shdr10_hdr_aec_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmod_shdr10_hdr_aec_dataType(
        ParameterFileSymbolTableEntry* entry,
        mod_shdr10_hdr_aec_dataType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load mod_shdr10_hdr_aec_dataType_hdr_aec_dataStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmod_shdr10_hdr_aec_dataType_hdr_aec_dataStruct(
        ParameterFileSymbolTableEntry* entry,
        mod_shdr10_hdr_aec_dataType::hdr_aec_dataStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load mod_shdr10_drc_gain_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmod_shdr10_drc_gain_dataType(
        ParameterFileSymbolTableEntry* entry,
        mod_shdr10_drc_gain_dataType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load mod_shdr10_drc_gain_dataType_drc_gain_dataStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmod_shdr10_drc_gain_dataType_drc_gain_dataStruct(
        ParameterFileSymbolTableEntry* entry,
        mod_shdr10_drc_gain_dataType::drc_gain_dataStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load chromatix_shdr10_coreType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadchromatix_shdr10_coreType(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10_coreType* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load chromatix_shdr10Type
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadchromatix_shdr10Type(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load enable_sectionStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadenable_sectionStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type::enable_sectionStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load module_versionStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadmodule_versionStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type::module_versionStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load parameter_versionStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadparameter_versionStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type::parameter_versionStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load control_variablesStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadcontrol_variablesStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type::control_variablesStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Load control_methodStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static BOOL Loadcontrol_methodStruct(
        ParameterFileSymbolTableEntry* entry,
        chromatix_shdr10Type::control_methodStruct* structure,
        UINT64 alignment);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload mod_shdr10_hdr_aec_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadmod_shdr10_hdr_aec_dataType(
        mod_shdr10_hdr_aec_dataType* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload mod_shdr10_hdr_aec_dataType_hdr_aec_dataStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadmod_shdr10_hdr_aec_dataType_hdr_aec_dataStruct(
        mod_shdr10_hdr_aec_dataType::hdr_aec_dataStruct* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload mod_shdr10_drc_gain_dataType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadmod_shdr10_drc_gain_dataType(
        mod_shdr10_drc_gain_dataType* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload mod_shdr10_drc_gain_dataType_drc_gain_dataStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadmod_shdr10_drc_gain_dataType_drc_gain_dataStruct(
        mod_shdr10_drc_gain_dataType::drc_gain_dataStruct* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload chromatix_shdr10_coreType
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadchromatix_shdr10_coreType(
        chromatix_shdr10_coreType* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload chromatix_shdr10Type
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadchromatix_shdr10Type(
        chromatix_shdr10Type* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Unload parameter_versionStruct
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static void Unloadparameter_versionStruct(
        chromatix_shdr10Type::parameter_versionStruct* structure);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Parse symbol table entry, and return a new object
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ParameterModule* Parse(
        ParameterFileSymbolTableEntry* entry,
        UINT64 alignment) const;

}; // End class chromatix_shdr10TypeClass

SHDR_1_0_0_NAMESPACE_END
#endif // SHDR_1_0_0_H

